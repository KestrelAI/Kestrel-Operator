apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    app: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            # Server connection configuration
            - name: SERVER_HOST
              value: "{{ .Values.server.host }}"
            - name: SERVER_PORT
              value: "{{ .Values.server.port }}"
            - name: SERVER_USE_TLS
              value: "{{ .Values.server.useTLS }}"
            
            # Pod namespace for self-identification
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
                  
            # JWT Authentication configuration
            {{- if .Values.auth.existingSecret }}
            - name: AUTH_SECRET_NAME
              value: "{{ .Values.auth.existingSecret }}"
            - name: AUTH_SECRET_KEY
              value: "{{ .Values.auth.secretKey | default "token" }}"
            {{- else if .Values.auth.token }}
            - name: AUTH_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-jwt
                  key: token
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
{{- if and (not .Values.auth.existingSecret) .Values.auth.token }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}-jwt
type: Opaque
data:
  token: {{ .Values.auth.token | b64enc }}
{{- end }} 