# Default values for kestrel-operator
replicaCount: 1

image:
  repository: ghcr.io/kestrelai/kestrel-operator
  tag: latest
  pullPolicy: IfNotPresent


# Pod configuration
podAnnotations: {}
podLabels: {}
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 65534
  fsGroup: 65534

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 65534

# Kestrel Cloud connection configuration
server:
  host: grpc.platform.usekestrel.ai
  port: 443
  useTLS: true
  # mTLS configuration for enhanced security
  useMTLS: false
  serverName: grpc.platform.usekestrel.ai  # SNI name for certificate verification

# JWT Authentication configuration
auth:
  # REQUIRED: JWT token for operator authentication
  # Generate this token via the Kestrel Cloud onboarding API
  token: ""

# mTLS Certificate configuration
# Only required when server.useMTLS is true
mtls:
  # Client certificate and key for mTLS authentication
  # These should be generated and signed by the CA that the server trusts
  clientCert:
    # Certificate data (PEM format) - can be provided directly or via secret
    data: ""
    # Alternative: reference to existing secret containing client certificate
    secretName: ""
    secretKey: "tls.crt"
  
  clientKey:
    # Private key data (PEM format) - can be provided directly or via secret
    data: ""
    # Alternative: reference to existing secret containing client private key
    secretName: ""
    secretKey: "tls.key"
  
  # CA certificate for verifying server certificate
  caCert:
    # CA certificate data (PEM format) - can be provided directly or via secret
    data: ""
    # Alternative: reference to existing secret containing CA certificate
    secretName: ""
    secretKey: "ca.crt"

# Operator behavior configuration
operator:
  # Cilium integration settings
  cilium:
    # Set to true to disable Cilium flow collection entirely
    # Useful for clusters without Cilium or when only resource ingestion is needed
    disableFlows: false
    
    # Hubble TLS configuration for secure connections to Hubble relay
    # By default, the operator will try to use TLS to connect to Hubble
    hubble:
      tls:
        forceDisable: false
  
  # Istio integration settings  
  istio:
    # Enable Istio Access Log Service for L7 flow collection
    # When enabled, operator will start a gRPC ALS server to receive Envoy access logs
    enabled: false
    # Port for the ALS gRPC server
    alsPort: 8080

  # Safe-apply configuration for Chat YAML changes
  safeApply:
    # Enable safe-apply permissions for the operator
    # When enabled, the operator will have RBAC permissions to apply approved YAML changes
    enabled: false

# Health check configuration for liveness probe
healthcheck:
  # Port for the health check HTTP server (8081 to avoid conflict with Istio ALS port 8080)
  port: 8081
  
  # Liveness probe configuration
  # The liveness probe determines if the pod should be restarted
  # It will fail if the gRPC stream is in an EOF loop or unhealthy for too long
  livenessProbe:
    initialDelaySeconds: 30  # Wait 30 seconds after container starts
    periodSeconds: 30        # Check every 30 seconds
    timeoutSeconds: 5        # Timeout after 5 seconds
    failureThreshold: 3      # Restart after 3 consecutive failures
    successThreshold: 1      # Consider healthy after 1 success
  


# Resource limits and requests - optimized for production
resources:
  limits:
    cpu: 500m
    memory: 2Gi
  requests:
    cpu: 250m
    memory: 1Gi

# Node selection and affinity
nodeSelector: {}
tolerations: []
affinity: {}

# Network Policy configuration
networkPolicy:
  create: false


# Service Account configuration
serviceAccount:
  create: true
  annotations: {}
  name: ""

